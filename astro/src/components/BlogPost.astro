---
import SanityBlockContent from './SanityBlockContent.jsx'
import { getSanityImageUrl, formatBlogPostDate } from '../utils/helpers.js'

export interface Props {
  post: any;
}

const { post } = Astro.props;
const mainImgUrl = getSanityImageUrl(post.mainImage).url()
// const blogPostBody = await convertBlockContentToMarkdown(post.bodyRaw);
//console.log({post})
---

{!!post.imageHero && <header style={`background-image: url('${mainImgUrl}')`}>
  <div class="hero-overlay"></div>
  <div class="text-center hero-content text-neutral-content">
    <div class="max-w-md">
      <h1>{post.title}</h1>
      {post.author && (<figure class="avatar">
      <picture>
      {(post.author.image && <img loading="lazy" src={getSanityImageUrl(post.author.image).width(72).url()}>) || <img loading="lazy" src="https://api.lorem.space/image/face?hash=47449">}
      </picture>
      {post.author.name && <figcaption>{post.author.name}</figcaption>}
      </figure>)}

      <!--<p class="mb-5 text-xl">{post.excerpt}</p>-->
      <!--<a href="#content"><button class="btn btn-primary">Share this post</button></a>-->
    </div>
  </div>
</header>}
<main id="content">
  {!post.imageHero && <img data={post.mainImage} loading="lazy" src={getSanityImageUrl(post.mainImage).url()} />}
  <aside>
    {!post.imageHero && post.author && (
      <figure class="avatar">
      <picture>
      {(post.author.image && <img loading="lazy" src={getSanityImageUrl(post.author.image).url()}>) || <img loading="lazy" src="https://api.lorem.space/image/face?hash=47449">}
      </picture>
      {post.author.name && <figcaption>{post.author.name}</figcaption>}
    </figure>)}
  </aside>
  <article>
    {!post.imageHero && <h1>{post.title}</h1>}
    <time>{formatBlogPostDate(post.publishedAt)}</time>
    <h4 class="py-6 mb-5">{post.excerpt}</h4>
    <SanityBlockContent blocks={post.body} />
  </article>
  <aside>
      {post.categories.map(category => (
        <label tabindex="0"><a href={`/blog/category/${category.slug.current}`}>#{category.title}</a></label>
      ))}
  </aside>

</main>

<style>
  header {
    @apply hero min-h-min;
  }
  @media (orientation: landscape) {
    header {
      @apply min-h-screen;
      margin-top: -4rem;
      /*padding-top: 4rem;*/
    }
  }
  main {
    @apply container mx-auto py-16;
    max-width: 1280px;
  }
  article {
    @apply mx-auto prose md:prose-lg lg:prose-xl prose-a:underline prose-a:decoration-dotted;
  }

  h1 {
    @apply mb-5 text-5xl font-bold;
    word-break: break-word;
  }
  aside {
    @apply mx-auto prose md:prose-lg lg:prose-xl prose-a:underline prose-a:decoration-dotted flex flex-row gap-4 justify-center;
    /*display: flex;
    flex-direction: row;
    justify-content: space-between;*/
    align-items: center;
    margin-block: 2rem;
  }
  .avatar {
    align-items: center;
  }
  picture {
    @apply shadow-2xl w-16 h-16 mask mask-squircle;
    margin-inline-end: 1rem;
  }
  figcaption {
    font-variant: small-caps;
  }
  aside img {
    margin: 0;
  }
  main > img {
    position: relative;
    width: auto;
    max-width: 100%;
    max-height: 50vh;
    @apply rounded-lg shadow-2xl mx-auto
  }
  time {
    font-size: smaller;
  }
</style>

